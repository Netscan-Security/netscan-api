import { Controller, Get, Post, Body, Logger, Param } from '@nestjs/common';
import { FindOneParams } from 'src/interfaces/dtos/general.interface.dto';
import { CreateVulnerabilityDto } from 'src/interfaces/dtos/vulnerabilities.dto';

import { VulnerabilityService } from 'src/services/vulnerability/vulnerability.service';

@Controller('vulnerability')
export class VulnerabilityController {
  constructor(private readonly vulnerabilityService: VulnerabilityService) {}
  private readonly logger = new Logger(VulnerabilityController.name);

  @Post('register')
  registerVulnerability(@Body() data: CreateVulnerabilityDto) {
    this.logger.debug('Registering Vulnerability', `${JSON.stringify(data)}`);
    return this.vulnerabilityService.create(data);
  }

  @Get(':id')
  findOne(@Param() params: FindOneParams): Promise<any> {
    this.logger.debug('Finding Vulnerability: ', params.id);
    return this.vulnerabilityService.findById(params.id);
  }

  @Get()
  viewVulnerability() {
    return this.vulnerabilityService.findAll();
  }
}
